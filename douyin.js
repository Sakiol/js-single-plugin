import { segment } from "oicq";
import fetch from 'node-fetch'
import fs from 'node:fs'
import https from "https";
import http from "http";
const _path = process.cwd();



if (!fs.existsSync(`${_path}/resources/video`)) {
    fs.mkdirSync(`${_path}/resources/video`);
}
export const rule = {
    //jiexi: {
    // reg: '^(.*)https(.*)douyin(.*)$', //匹配消息正则，命令正则
    // priority: 5000, //优先级，越小优先度越高
    //   describe: "【#示例】开发简单示例演示", //【命令】功能说明
    // },
    cancanneed: {
        reg: '#*(can can need|ccn)', //匹配消息正则，命令正则
        priority: 5000, //优先级，越小优先度越高
        describe: "【#示例】开发简单示例演示", //【命令】功能说明 
    },


}


//export async function jiexi(e) {
//    const _0x29f3 = ['call', 'reply', 'stateObject', 'https://api.xcboke.cn/api/juhe?url=', '^([^\x20]+(\x20+[^\x20]+)+)+[^\x20]}', '{}.constructor(\x22return\x20this\x22)(\x20)', 'input', 'test', 'prototype', 'arrayBuffer', 'table', 'apply', '40893vuYaxg', 'file:///', '\x5c+\x5c+\x20*(?:[a-zA-Z_$][0-9a-zA-Z_$]*)', 'binary', 'while\x20(true)\x20{}', 'console', 'bind', '545878ZRInpb', '6UFUdNw', '13CjBcRh', 'constructor', 'gger', 'toString', '107851ldsYcJ', 'init', 'json', '36676yFwlFD', '/resources/video/QwQ.mp4', 'match', '下载视频成功', 'action', 'counter', 'error', '__proto__', '1OXiDPM', 'return\x20/\x22\x20+\x20this\x20+\x20\x22/', '3brxcRi', 'info', 'msg', './resources/video/QwQ.mp4', 'exception', 'debu', 'return\x20(function()\x20', 'video', 'chain', 'function\x20*\x5c(\x20*\x5c)', '1142621NlBVRv', 'writeFile', 'log', '12891jNAKlg', '232822zPrZqv', 'data', 'url', 'trace', 'warn', 'string', '25lquiTn', 'from', 'length']; (function (_0x18dcc2, _0x4be1cc) { function _0x58edbd(_0x4d3ba8, _0x11ccde) { return _0x39f8(_0x11ccde - 0x3e1, _0x4d3ba8); } while (!![]) { try { const _0x45bf01 = -parseInt(_0x58edbd(0x534, 0x52b)) * parseInt(_0x58edbd(0x4f6, 0x4f5)) + parseInt(_0x58edbd(0x53e, 0x522)) * parseInt(_0x58edbd(0x510, 0x52a)) + parseInt(_0x58edbd(0x521, 0x509)) * parseInt(_0x58edbd(0x4e6, 0x4fd)) + -parseInt(_0x58edbd(0x504, 0x50d)) * -parseInt(_0x58edbd(0x4ef, 0x4ff)) + -parseInt(_0x58edbd(0x547, 0x529)) + parseInt(_0x58edbd(0x528, 0x50c)) * -parseInt(_0x58edbd(0x4ff, 0x513)) + -parseInt(_0x58edbd(0x4e8, 0x4f2)); if (_0x45bf01 === _0x4be1cc) break; else _0x18dcc2['push'](_0x18dcc2['shift']()); } catch (_0x25de33) { _0x18dcc2['push'](_0x18dcc2['shift']()); } } }(_0x29f3, -0xe302 * -0x7 + 0xfb5 * 0xe9 + -0x43a6 * 0x29)); const _0x4565d3 = function () { let _0x3b9bda = !![]; return function (_0x2b3543, _0x27ee0b) { const _0x2966ff = _0x3b9bda ? function () { function _0x639e6d(_0xcf986b, _0x2925c6) { return _0x39f8(_0x2925c6 - 0x13, _0xcf986b); } if (_0x27ee0b) { const _0x4a959e = _0x27ee0b[_0x639e6d(0x137, 0x153)](_0x2b3543, arguments); return _0x27ee0b = null, _0x4a959e; } } : function () { }; return _0x3b9bda = ![], _0x2966ff; }; }(), _0x4f4951 = _0x4565d3(this, function () { const _0x50769b = function () { const _0x10a9ed = _0x50769b[_0x199e12(-0x1a0, -0x1a1)](_0x199e12(-0x1ce, -0x1b5))()[_0x199e12(-0x1a0, -0x1b7)](_0x199e12(-0x1b2, -0x1bd)); function _0x199e12(_0x37c3de, _0x5da4de) { return _0x39f8(_0x37c3de - -0x2eb, _0x5da4de); } return !_0x10a9ed[_0x199e12(-0x1af, -0x1c1)](_0x4f4951); }; return _0x50769b(); }); _0x4f4951(); const _0x3da6d3 = function () { let _0x3c6373 = !![]; return function (_0x4c3874, _0x1e5312) { const _0x1f0fd0 = _0x3c6373 ? function () { function _0x2e7886(_0x313298, _0x2b6c79) { return _0x39f8(_0x313298 - -0x85, _0x2b6c79); } if (_0x1e5312) { const _0xae3af9 = _0x1e5312[_0x2e7886(0xbb, 0xc8)](_0x4c3874, arguments); return _0x1e5312 = null, _0xae3af9; } } : function () { }; return _0x3c6373 = ![], _0x1f0fd0; }; }(); (function () { _0x3da6d3(this, function () { const _0x1206bd = new RegExp(_0x9f4c5f(0x434, 0x44b)), _0x59324a = new RegExp(_0x9f4c5f(0x450, 0x43d), 'i'); function _0x9f4c5f(_0x4977e4, _0x12815d) { return _0x39f8(_0x4977e4 - 0x30d, _0x12815d); } const _0x2c0bb0 = _0x3adc5c(_0x9f4c5f(0x41f, 0x42d)); !_0x1206bd[_0x9f4c5f(0x449, 0x43c)](_0x2c0bb0 + _0x9f4c5f(0x433, 0x421)) || !_0x59324a[_0x9f4c5f(0x449, 0x441)](_0x2c0bb0 + _0x9f4c5f(0x448, 0x447)) ? _0x2c0bb0('0') : _0x3adc5c(); })(); }()); const _0x24ef3d = function () { let _0x2dc355 = !![]; return function (_0x5ea52f, _0x10a0a3) { const _0x2f734d = _0x2dc355 ? function () { function _0x1dcac3(_0x2ba1ac, _0x4a57f6) { return _0x39f8(_0x2ba1ac - -0x1a, _0x4a57f6); } if (_0x10a0a3) { const _0x4a06d0 = _0x10a0a3[_0x1dcac3(0x126, 0x10b)](_0x5ea52f, arguments); return _0x10a0a3 = null, _0x4a06d0; } } : function () { }; return _0x2dc355 = ![], _0x2f734d; }; }(); setInterval(function () { _0x3adc5c(); }, 0x121d * -0x1 + -0x399 * 0x6 + -0x3753 * -0x1); const _0x2a8d3c = _0x24ef3d(this, function () { const _0x12805b = function () { let _0x4f02c3; function _0x23212e(_0x42d8fd, _0x48b448) { return _0x39f8(_0x42d8fd - 0x230, _0x48b448); } try { _0x4f02c3 = Function(_0x23212e(0x354, 0x368) + _0x23212e(0x36a, 0x387) + ');')(); } catch (_0x1c298e) { _0x4f02c3 = window; } return _0x4f02c3; }, _0x1143c1 = _0x12805b(), _0x590c3a = _0x1143c1[_0x1d105b(0x488, 0x495)] = _0x1143c1[_0x1d105b(0x48c, 0x495)] || {}, _0x31c353 = [_0x1d105b(0x47d, 0x479), _0x1d105b(0x498, 0x47f), _0x1d105b(0x46e, 0x46e), _0x1d105b(0x461, 0x469), _0x1d105b(0x483, 0x471), _0x1d105b(0x483, 0x48e), _0x1d105b(0x492, 0x47e)]; function _0x1d105b(_0x5b91fe, _0x305363) { return _0x39f8(_0x305363 - 0x34f, _0x5b91fe); } for (let _0x1616df = -0x99a + -0x3 * -0xb3d + -0x181d; _0x1616df < _0x31c353[_0x1d105b(0x49e, 0x483)]; _0x1616df++) { const _0x390daa = _0x24ef3d[_0x1d105b(0x481, 0x49a)][_0x1d105b(0x477, 0x48c)][_0x1d105b(0x4ac, 0x496)](_0x24ef3d), _0x320bd0 = _0x31c353[_0x1616df], _0x585dbd = _0x590c3a[_0x320bd0] || _0x390daa; _0x390daa[_0x1d105b(0x478, 0x46a)] = _0x24ef3d[_0x1d105b(0x493, 0x496)](_0x24ef3d), _0x390daa[_0x1d105b(0x46d, 0x45f)] = _0x585dbd[_0x1d105b(0x45e, 0x45f)][_0x1d105b(0x48f, 0x496)](_0x585dbd), _0x590c3a[_0x320bd0] = _0x390daa; } }); _0x2a8d3c(); let msg = e[_0x52fa2b(0x415, 0x3f6)][_0x52fa2b(0x3e7, 0x3ec)](/https:(.*)/), dy = await (await fetch(_0x52fa2b(0x422, 0x40e) + msg))[_0x52fa2b(0x3ea, 0x3e9)](), response = await fetch(dy[_0x52fa2b(0x3ea, 0x403)][_0x52fa2b(0x40b, 0x404)]); function _0x52fa2b(_0x4a6972, _0x1c4b75) { return _0x39f8(_0x1c4b75 - 0x2d6, _0x4a6972); } let buff = await response[_0x52fa2b(0x406, 0x414)](); fs[_0x52fa2b(0x3ef, 0x3ff)](_0x52fa2b(0x3f9, 0x3f7), Buffer[_0x52fa2b(0x425, 0x409)](buff), _0x52fa2b(0x428, 0x41a), function (_0x3c21a4) { function _0x2bd58a(_0x101a81, _0x3c1090) { return _0x52fa2b(_0x3c1090, _0x101a81 - -0x683); } console[_0x2bd58a(-0x283, -0x298)](_0x3c21a4 || _0x2bd58a(-0x296, -0x2a0)), !_0x3c21a4 && e[_0x2bd58a(-0x277, -0x27d)](segment[_0x2bd58a(-0x288, -0x274)](_0x2bd58a(-0x26b, -0x276) + _path + _0x2bd58a(-0x298, -0x290))); }); return !![]; function _0x39f8(_0x4ef682, _0x2634aa) { return _0x39f8 = function (_0x3adc5c, _0x3da6d3) { _0x3adc5c = _0x3adc5c - (-0x2427 + 0x1792 + 0xda4); let _0x176173 = _0x29f3[_0x3adc5c]; return _0x176173; }, _0x39f8(_0x4ef682, _0x2634aa); } function _0x3adc5c(_0x3aabef) { function _0x1ee4b5(_0x3972b4) { function _0x29c633(_0x368707, _0x432671) { return _0x39f8(_0x432671 - -0x155, _0x368707); } if (typeof _0x3972b4 === _0x29c633(-0xf, -0x24)) return function (_0x222c06) { }[_0x29c633(-0x29, -0xa)](_0x29c633(-0xc, -0x10))[_0x29c633(-0xe, -0x15)](_0x29c633(-0x2f, -0x3c)); else ('' + _0x3972b4 / _0x3972b4)[_0x29c633(-0x31, -0x21)] !== -0x60c + -0x2b6 * -0x5 + 0x781 * -0x1 || _0x3972b4 % (0x35 * 0xaf + 0xd61 + 0x13d * -0x28) === 0xec + -0x4f3 * -0x7 + -0x2391 ? function () { return !![]; }[_0x29c633(0x7, -0xa)](_0x29c633(-0x40, -0x32) + _0x29c633(-0x41, -0x46))[_0x29c633(-0x3e, -0x20)](_0x29c633(-0x5c, -0x3d)) : function () { return ![]; }[_0x29c633(-0x12, -0xa)](_0x29c633(-0x4b, -0x32) + _0x29c633(-0x59, -0x46))[_0x29c633(-0xf, -0x15)](_0x29c633(-0x16, -0x1e)); _0x1ee4b5(++_0x3972b4); } try { if (_0x3aabef) return _0x1ee4b5; else _0x1ee4b5(0x837 + 0x1 * -0x24bf + 0x1c88 * 0x1); } catch (_0x2b3aa9) { } }

//}

export async function cancanneed(e) {
    let url;
    const filemp4 = await downloadMp4(url);
    e.reply(segment.video(filemp4))
}
export async function downloadMp4(e) {
    let url = "http://101.33.199.104/api/xjj";
    return new Promise((resolve, reject) => {
        if (!fs.existsSync(`${_path}/resources/video/temp`)) {
            fs.mkdirSync(`${_path}/resources/video/temp`);
        }

        var protocol = url.indexOf("https:") !== -1 ? https : http;

        protocol
            .get(url, (res) => {
                const file = fs.createWriteStream(
                    `${_path}/resources/video/temp/temp.mp4`
                );
                // Write data into local file
                res.pipe(file);
                // Close the file
                file.on("finish", () => {
                    file.close();
                    resolve(`${_path}/resources/video/temp/temp.mp4`);
                });
            })
            .on("error", (err) => {
                logger.error(`视频下载失败：${JSON.stringify(err)}`);
            });
    });
}


